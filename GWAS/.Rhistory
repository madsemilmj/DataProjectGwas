abline(v = 100, col = "red", lw = 2)
acf(my_sample[,5], main = latex2exp::TeX('for $\\epsilon_{s}$'))
par(mfrow=c(5,2), mar=c(10,10,10,10), oma = c(0,0,0,0))
plot(my_sample[,1], type = "l", main="LOL")
par(mfrow=c(5,2), mar=c(5,5,5,5), oma = c(0,0,0,0))
plot(my_sample[,1], type = "l", main="LOL")
par(mfrow=c(5,2), mar=c(1,1,1,1), oma = c(0,0,0,0))
plot(my_sample[,1], type = "l", main="LOL")
abline(v = 100, col = "red", lw = 2)
acf(my_sample[,1], main = latex2exp::TeX('for $\\epsilon_{o,g}$'))
plot(my_sample[,2], type = "l",main="LOL")
abline(v = 100, col = "red", lw = 2)
acf(my_sample[,2], main = latex2exp::TeX('for $\\epsilon_{o}$'))
plot(my_sample[,3], type = "l", main="LOL")
abline(v = 100, col = "red", lw = 2)
acf(my_sample[,3], main = latex2exp::TeX('for $\\epsilon_{p_1}$'))
plot(my_sample[,4], type = "l", main="LOL")
abline(v = 100, col = "red", lw = 2)
acf(my_sample[,4], main = latex2exp::TeX('for $\\epsilon_{p_2}$'))
plot(my_sample[,5], type = "l", main="LOL")
abline(v = 100, col = "red", lw = 2)
acf(my_sample[,5], main = latex2exp::TeX('for $\\epsilon_{s}$'))
dev.size()
dev.size(2)
dev.size(2)
dev.size(units = "cm")
par(mfrow=c(5,2), mar=c(1,1,1,1), oma = c(0,0,0,0), "din")
par(mfrow=c(5,2), mar=c(1,1,1,1), oma = c(0,0,0,0), "din")
plot(my_sample[,1], type = "l", main="LOL")
abline(v = 100, col = "red", lw = 2)
acf(my_sample[,1], main = latex2exp::TeX('for $\\epsilon_{o,g}$'))
plot(my_sample[,2], type = "l",main="LOL")
abline(v = 100, col = "red", lw = 2)
acf(my_sample[,2], main = latex2exp::TeX('for $\\epsilon_{o}$'))
plot(my_sample[,3], type = "l", main="LOL")
abline(v = 100, col = "red", lw = 2)
acf(my_sample[,3], main = latex2exp::TeX('for $\\epsilon_{p_1}$'))
plot(my_sample[,4], type = "l", main="LOL")
abline(v = 100, col = "red", lw = 2)
acf(my_sample[,4], main = latex2exp::TeX('for $\\epsilon_{p_2}$'))
plot(my_sample[,5], type = "l", main="LOL")
abline(v = 100, col = "red", lw = 2)
acf(my_sample[,5], main = latex2exp::TeX('for $\\epsilon_{s}$'))
knitr::opts_chunk$set(echo = TRUE, fig.width=10, fig.height=16)
library(GWAS)
library(latex2exp)
pnorm(-Inf,0,1)
pnorm(Inf,0,1)
```{r setup, include=FALSE}
Bla bla bla bla
```{r setup, include=FALSE}
install.packages("here")
library(here)
setwd("C:\\Users\\Bruger\\Desktop\\DataProjectGWAS")
library("devtools")
setwd("./GWAS")
document()
install.packages(qqman)
install.packages("qqman")
install.packages("plotly")
# Read files
assoc_file <- read.table("case_ctrl_10000_50000_50_5.assoc", header = T)
causal1 <- read.table("BETA_10000_50000_50_5.txt", header = T)
assoc_file$C <- ifelse(causal1$V2 != 0, ' yes', ' no')
# Threshold
thr = -log10(.05/SNP)
don <- assoc_file %>%
# Filter SNP to make the plot lighter
filter(-log10(P)>0.5)
# Prepare text description for each SNP:
don$text <- paste("SNP: ", don$SNP, "\nLOD score:", -log10(don$P) %>% round(2), "\nCausal SNP:", don$C ,sep="")
# Make the plot
p <- ggplot(don, aes(x=SNP, y=-log10(P), text=text)) +
# Show all points
geom_point( aes(color=ifelse(-log10((P))>thr,'red', 'darkgrey')), alpha=0.8, size=1.3) +
scale_color_manual(values = c("darkgrey", "red")) +
# Add causal points that are also significant
geom_point(data=subset(don, C != ' no' & -log10(P)>thr), color="orange", size=2.5) +
# Custom the theme:
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
# Read files
assoc_file <- read.table("case_ctrl_10000_50000_50_5.assoc", header = T)
causal1 <- read.table("BETA_10000_50000_50_5.txt", header = T)
assoc_file$C <- ifelse(causal1$V2 != 0, ' yes', ' no')
# Threshold
thr = -log10(.05/SNP)
don <- assoc_file %>%
# Filter SNP to make the plot lighter
filter(-log10(P)>0.5)
# Prepare text description for each SNP:
don$text <- paste("SNP: ", don$SNP, "\nLOD score:", -log10(don$P) %>% round(2), "\nCausal SNP:", don$C ,sep="")
# Make the plot
p <- ggplot2::ggplot(don, ggplot2::aes(x=SNP, y=-log10(P), text=text)) +
# Show all points
ggplot2::geom_point( ggplot2::aes(color=ifelse(-log10((P))>thr,'red', 'darkgrey')), alpha=0.8, size=1.3) +
ggplot2::scale_color_manual(values = c("darkgrey", "red")) +
# Add causal points that are also significant
ggplot2::geom_point(data=subset(don, C != ' no' & -log10(P)>thr), color="orange", size=2.5) +
# Custom the theme:
ggplot2::theme_bw() +
ggplot2::theme(
legend.position="none",
panel.border = ggplot2::element_blank(),
panel.grid.major.x = ggplot2::element_blank(),
panel.grid.minor.x = ggplot2::element_blank()
)
getwd()
setwd("C:/Users/Bruger/OneDrive - Aarhus Universitet/dataprojekt_shiny_app")
total_indiv <- 100000
SNP <- 100000
h <- 0.5
sib <- 0
# Read files
assoc_string <- paste("./data/case_ctrl","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.ASSOC", sep="")
assoc_file <- data.table::fread(assoc_string)
causal_string <- paste("./data/BETA","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.ASSOC", sep="")
causal1 <- data.table::fread(causal_string)
assoc_file$C <- ifelse(causal1$V2 != 0, ' yes', ' no')
# Threshold
thr = -log10(.05/SNP)
don <- assoc_file %>%
# Filter SNP to make the plot lighter
filter(-log10(P)>0.5)
# Prepare text description for each SNP:
don$text <- paste("SNP: ", don$SNP, "\nLOD score:", -log10(don$P) %>% round(2), "\nCausal SNP:", don$C ,sep="")
# Make the plot
p <- ggplot2::ggplot(don, ggplot2::aes(x=SNP, y=-log10(P), text=text)) +
# Show all points
ggplot2::geom_point( ggplot2::aes(color=ifelse(-log10((P))>thr,'red', 'darkgrey')), alpha=0.8, size=1.3) +
ggplot2::scale_color_manual(values = c("darkgrey", "red")) +
# Add causal points that are also significant
ggplot2::geom_point(data=subset(don, C != ' no' & -log10(P)>thr), color="orange", size=2.5) +
# Custom the theme:
ggplot2::theme_bw() +
ggplot2::theme(
legend.position="none",
panel.border = ggplot2::element_blank(),
panel.grid.major.x = ggplot2::element_blank(),
panel.grid.minor.x = ggplot2::element_blank()
)
total_indiv <- 100000
SNP <- 100000
h <- 0.5
sib <- 0
# Read files
assoc_string <- paste("./data/case_ctrl","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.ASSOC", sep="")
assoc_file <- data.table::fread(assoc_string)
causal_string <- paste("./data/BETA","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.txt", sep="")
causal1 <- data.table::fread(causal_string)
assoc_file$C <- ifelse(causal1$V2 != 0, ' yes', ' no')
# Threshold
thr = -log10(.05/SNP)
don <- assoc_file %>%
# Filter SNP to make the plot lighter
filter(-log10(P)>0.5)
# Prepare text description for each SNP:
don$text <- paste("SNP: ", don$SNP, "\nLOD score:", -log10(don$P) %>% round(2), "\nCausal SNP:", don$C ,sep="")
# Make the plot
p <- ggplot2::ggplot(don, ggplot2::aes(x=SNP, y=-log10(P), text=text)) +
# Show all points
ggplot2::geom_point( ggplot2::aes(color=ifelse(-log10((P))>thr,'red', 'darkgrey')), alpha=0.8, size=1.3) +
ggplot2::scale_color_manual(values = c("darkgrey", "red")) +
# Add causal points that are also significant
ggplot2::geom_point(data=subset(don, C != ' no' & -log10(P)>thr), color="orange", size=2.5) +
# Custom the theme:
ggplot2::theme_bw() +
ggplot2::theme(
legend.position="none",
panel.border = ggplot2::element_blank(),
panel.grid.major.x = ggplot2::element_blank(),
panel.grid.minor.x = ggplot2::element_blank()
)
# Read files
assoc_string <- paste("./data/case_ctrl","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.ASSOC", sep="")
assoc_file <- data.table::fread(assoc_string)
causal_string <- paste("./data/BETA","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.txt", sep="")
causal1 <- data.table::fread(causal_string)
assoc_file$C <- ifelse(causal1$V2 != 0, ' yes', ' no')
# Threshold
thr = -log10(.05/SNP)
don <- assoc_file %>%
# Filter SNP to make the plot lighter
filter(-log10(P)>0.5)
don <- assoc_file %>%
# Filter SNP to make the plot lighter
dplyr::filter(-log10(P)>0.5)
# Prepare text description for each SNP:
don$text <- paste("SNP: ", don$SNP, "\nLOD score:", -log10(don$P) %>% round(2), "\nCausal SNP:", don$C ,sep="")
# Make the plot
p <- ggplot2::ggplot(don, ggplot2::aes(x=SNP, y=-log10(P), text=text)) +
# Show all points
ggplot2::geom_point( ggplot2::aes(color=ifelse(-log10((P))>thr,'red', 'darkgrey')), alpha=0.8, size=1.3) +
ggplot2::scale_color_manual(values = c("darkgrey", "red")) +
# Add causal points that are also significant
ggplot2::geom_point(data=subset(don, C != ' no' & -log10(P)>thr), color="orange", size=2.5) +
# Custom the theme:
ggplot2::theme_bw() +
ggplot2::theme(
legend.position="none",
panel.border = ggplot2::element_blank(),
panel.grid.major.x = ggplot2::element_blank(),
panel.grid.minor.x = ggplot2::element_blank()
)
ggplotly(p, tooltip="text")
plotly::ggplotly(p, tooltip="text")
View(assoc_file)
View(assoc_file)
View(causal1)
causals <- subset(causal1, V2 != 0)
causal1 <- data.table::fread(causal_string)
causal1$C <- ifelse(causal1$V2 != 0, "yes", "no")
assoc_file <- dplyr::left_join(dplyr::select(causal1,V1,C), by = c("SNP" = "V1"))
assoc_file <- dplyr::left_join(assoc_file,dplyr::select(causal1,V1,C), by = c("SNP" = "V1"))
View(assoc_file)
total_indiv <- 100000
SNP <- 100000
h <- 0.5
sib <- 0
# Read files
assoc_string <- paste("./data/case_ctrl","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.ASSOC", sep="")
assoc_file <- data.table::fread(assoc_string)
causal_string <- paste("./data/BETA","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.txt", sep="")
causal1 <- data.table::fread(causal_string)
causal1$C <- ifelse(causal1$V2 != 0, "yes", "no")
assoc_file <- dplyr::left_join(assoc_file,dplyr::select(causal1,V1,C), by = c("SNP" = "V1"))
assoc_file$C <- ifelse(causal1$V2 != 0, ' yes', ' no')
total_indiv <- 100000
SNP <- 100000
h <- 0.5
sib <- 0
# Read files
assoc_string <- paste("./data/case_ctrl","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.ASSOC", sep="")
assoc_file <- data.table::fread(assoc_string)
causal_string <- paste("./data/BETA","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.txt", sep="")
causal1 <- data.table::fread(causal_string)
causal1$C <- ifelse(causal1$V2 != 0, "yes", "no")
assoc_file <- dplyr::left_join(assoc_file,dplyr::select(causal1,V1,C), by = c("SNP" = "V1"))
assoc_file$C1 <- ifelse(causal1$V2 != 0, ' yes', ' no')
total_indiv <- 100000
SNP <- 100000
h <- 0.5
sib <- 0
# Read files
assoc_string <- paste("./data/case_ctrl","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.ASSOC", sep="")
assoc_file <- data.table::fread(assoc_string)
causal_string <- paste("./data/BETA","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.txt", sep="")
causal1 <- data.table::fread(causal_string)
causal1$C <- ifelse(causal1$V2 != 0, "yes", "no")
assoc_file <- dplyr::left_join(assoc_file,dplyr::select(causal1,V1,C), by = c("SNP" = "V1"))
# Threshold
thr = -log10(.05/SNP)
don <- assoc_file %>%
# Filter SNP to make the plot lighter
dplyr::filter(-log10(P)>0.5)
# Prepare text description for each SNP:
don$text <- paste("SNP: ", don$SNP, "\nLOD score:", -log10(don$P) %>% round(2), "\nCausal SNP:", don$C ,sep="")
# Make the plot
p <- ggplot2::ggplot(don, ggplot2::aes(x=SNP, y=-log10(P), text=text)) +
# Show all points
ggplot2::geom_point( ggplot2::aes(color=ifelse(-log10((P))>thr,'red', 'darkgrey')), alpha=0.8, size=1.3) +
ggplot2::scale_color_manual(values = c("darkgrey", "red")) +
# Add causal points that are also significant
ggplot2::geom_point(data=subset(don, C != ' no' & -log10(P)>thr), color="orange", size=2.5) +
# Custom the theme:
ggplot2::theme_bw() +
ggplot2::theme(
legend.position="none",
panel.border = ggplot2::element_blank(),
panel.grid.major.x = ggplot2::element_blank(),
panel.grid.minor.x = ggplot2::element_blank()
)
p
p <- ggplot2::ggplot(don, ggplot2::aes(x=SNP, y=-log10(P), text=text)) +
# Show all points
ggplot2::geom_point( ggplot2::aes(color=ifelse(-log10((P))>thr,'red', 'darkgrey')), alpha=0.8, size=1.3) +
ggplot2::scale_color_manual(values = c("darkgrey", "red")) +
# Add causal points that are also significant
ggplot2::geom_point(data=subset(don, C != ' no' & -log10(P)>thr), color="orange", size=2.5) +
# Custom the theme:
ggplot2::theme_bw() +
ggplot2::theme(
legend.position="none",
panel.border = ggplot2::element_blank(),
panel.grid.major.x = ggplot2::element_blank(),
panel.grid.minor.x = ggplot2::element_blank()
)
plotly::ggplotly(p, tooltip="text")
total_indiv <- 100000
SNP <- 100000
h <- 0.5
sib <- 0
# Read files
assoc_string <- paste("./data/case_ctrl","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.ASSOC", sep="")
assoc_file <- data.table::fread(assoc_string)
causal_string <- paste("./data/BETA","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.txt", sep="")
causal1 <- data.table::fread(causal_string)
causal1$C <- ifelse(causal1$V2 != 0, "yes", "no")
assoc_file <- dplyr::left_join(assoc_file,dplyr::select(causal1,V1,C), by = c("SNP" = "V1"))
# Threshold
thr = -log10(.05/SNP)
don <- assoc_file %>%
# Filter SNP to make the plot lighter
dplyr::filter(-log10(P)>0.5)
# Prepare text description for each SNP:
don$text <- paste("SNP: ", don$SNP, "\nLOD score:", -log10(don$P) %>% round(2), "\nCausal SNP:", don$C ,sep="")
# Make the plot
p <- ggplot2::ggplot(don, ggplot2::aes(x=SNP, y=-log10(P), text=text)) +
# Show all points
ggplot2::geom_point( ggplot2::aes(color=ifelse(-log10((P))>thr,'red', 'darkgrey')), alpha=0.8, size=1.3) +
ggplot2::scale_color_manual(values = c("darkgrey", "red")) +
# Add causal points that are also significant
ggplot2::geom_point(data=subset(don, C != 'no' & -log10(P)>thr), color="orange", size=2.5) +
# Custom the theme:
ggplot2::theme_bw() +
ggplot2::theme(
legend.position="none",
panel.border = ggplot2::element_blank(),
panel.grid.major.x = ggplot2::element_blank(),
panel.grid.minor.x = ggplot2::element_blank()
)
plotly::ggplotly(p, tooltip="text")
total_indiv <- 100000
SNP <- 100000
h <- 0.5
sib <- 0
# Read files
assoc_string <- paste("./data/case_ctrl","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.ASSOC", sep="")
assoc_file <- data.table::fread(assoc_string)
causal_string <- paste("./data/BETA","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.txt", sep="")
causal1 <- data.table::fread(causal_string)
causal1$C <- ifelse(causal1$V2 != 0, "yes", "no")
assoc_file <- dplyr::left_join(assoc_file,dplyr::select(causal1,V1,C), by = c("SNP" = "V1"))
# Threshold
thr = -log10(.05/1000000)
don <- assoc_file %>%
# Filter SNP to make the plot lighter
dplyr::filter(-log10(P)>0.5)
# Prepare text description for each SNP:
don$text <- paste("SNP: ", don$SNP, "\nLOD score:", -log10(don$P) %>% round(2), "\nCausal SNP:", don$C ,sep="")
# Make the plot
p <- ggplot2::ggplot(don, ggplot2::aes(x=SNP, y=-log10(P), text=text)) +
# Show all points
ggplot2::geom_point( ggplot2::aes(color=ifelse(-log10((P))>thr,'red', 'darkgrey')), alpha=0.8, size=1.3) +
ggplot2::scale_color_manual(values = c("darkgrey", "red")) +
# Add causal points that are also significant
ggplot2::geom_point(data=subset(don, C != 'no' & -log10(P)>thr), color="orange", size=2.5) +
# Custom the theme:
ggplot2::theme_bw() +
ggplot2::theme(
legend.position="none",
panel.border = ggplot2::element_blank(),
panel.grid.major.x = ggplot2::element_blank(),
panel.grid.minor.x = ggplot2::element_blank()
)
plotly::ggplotly(p, tooltip="text")
p <- ggplot2::ggplot(don, ggplot2::aes(x=SNP, y=-log10(P), text=text)) +
# Show all points
ggplot2::geom_point(ggplot2::aes(color=ifelse(C == "yes", 'red', 'darkgrey')), alpha=0.8, size=1.3) +
ggplot2::scale_color_manual(values = c("darkgrey", "red")) +
# Add causal points that are also significant
ggplot2::geom_point(data=subset(don, C != 'no' & -log10(P)>thr), color="blue", size=1.6) +
# Custom the theme:
ggplot2::theme_bw() +
ggplot2::theme(
legend.position="none",
panel.border = ggplot2::element_blank(),
panel.grid.major.x = ggplot2::element_blank(),
panel.grid.minor.x = ggplot2::element_blank()
)
plotly::ggplotly(p, tooltip="text")
total_indiv <- 100000
SNP <- 100000
h <- 0.5
sib <- 0
# Read files
assoc_string <- paste("./data/case_ctrl","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.ASSOC", sep="")
assoc_file <- data.table::fread(assoc_string)
causal_string <- paste("./data/BETA","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.txt", sep="")
causal1 <- data.table::fread(causal_string)
causal1$C <- ifelse(causal1$V2 != 0, "yes", "no")
assoc_file <- dplyr::left_join(assoc_file,dplyr::select(causal1,V1,C), by = c("SNP" = "V1"))
# Threshold
thr = -log10(.05/1000000)
don <- assoc_file %>%
# Filter SNP to make the plot lighter
dplyr::filter(-log10(P)>0.5)
# Prepare text description for each SNP:
don$text <- paste("SNP: ", don$SNP, "\nLOD score:", -log10(don$P) %>% round(2), "\nCausal SNP:", don$C ,sep="")
# Make the plot
p <- ggplot2::ggplot(don, ggplot2::aes(x=SNP, y=-log10(P), text=text)) +
# Show all points
ggplot2::geom_point(ggplot2::aes(color=ifelse(C == "yes", 'red', 'darkgrey')), alpha=0.8, size=1.3) +
ggplot2::scale_color_manual(values = c("darkgrey", "red")) +
# Add causal points that are also significant
ggplot2::geom_point(data=subset(don, C != 'no' & -log10(P)>thr), color="blue", size=1.6) +
# Custom the theme:
ggplot2::theme_light() +
ggplot2::theme(
legend.position="none",
panel.border = ggplot2::element_blank(),
panel.grid.major.x = ggplot2::element_blank(),
panel.grid.minor.x = ggplot2::element_blank()
)
plotly::ggplotly(p, tooltip="text")
p <- ggplot2::ggplot(don, ggplot2::aes(x=SNP, y=-log10(P), text=text)) +
# Show all points
ggplot2::geom_point(ggplot2::aes(color=ifelse(C == "yes" & -log10(P)<=thr, 'red', 'darkgrey')), alpha=0.8, size=1.3) +
ggplot2::scale_color_manual(values = c("darkgrey", "red")) +
# Add causal points that are also significant
ggplot2::geom_point(data=subset(don, C != 'no' & -log10(P)>thr), color="blue", size=1.6) +
# Custom the theme:
ggplot2::theme_light() +
ggplot2::theme(
legend.position="none",
panel.border = ggplot2::element_blank(),
panel.grid.major.x = ggplot2::element_blank(),
panel.grid.minor.x = ggplot2::element_blank()
)
plotly::ggplotly(p, tooltip="text")
p <- ggplot2::ggplot(don, ggplot2::aes(x=SNP, y=-log10(P), text=text)) +
# Show all points
ggplot2::geom_point(ggplot2::aes(color=ifelse(C == "yes" & -log10(P)<=thr, 'black', 'darkgrey')), alpha=0.8, size=1.3) +
ggplot2::scale_color_manual(values = c("darkgrey", "red")) +
# Add causal points that are also significant
ggplot2::geom_point(data=subset(don, C != 'no' & -log10(P)>thr), color="blue", size=1.6) +
# Custom the theme:
ggplot2::theme_light() +
ggplot2::theme(
legend.position="none",
panel.border = ggplot2::element_blank(),
panel.grid.major.x = ggplot2::element_blank(),
panel.grid.minor.x = ggplot2::element_blank()
)
plotly::ggplotly(p, tooltip="text")
p <- ggplot2::ggplot(don, ggplot2::aes(x=SNP, y=-log10(P), text=text)) +
# Show all points
ggplot2::geom_point(ggplot2::aes(color=ifelse(C == "yes" & -log10(P)<=thr, 'black', 'darkgrey')), alpha=0.8, size=1.3) +
ggplot2::scale_color_manual(values = c("black" = "black", "darkgrey" = "darkgrey")) +
# Add causal points that are also significant
ggplot2::geom_point(data=subset(don, C != 'no' & -log10(P)>thr), color="blue", size=1.6) +
# Custom the theme:
ggplot2::theme_light() +
ggplot2::theme(
legend.position="none",
panel.border = ggplot2::element_blank(),
panel.grid.major.x = ggplot2::element_blank(),
panel.grid.minor.x = ggplot2::element_blank()
)
plotly::ggplotly(p, tooltip="text")
p <- ggplot2::ggplot(don, ggplot2::aes(x=SNP, y=-log10(P), text=text)) +
# Show all points
ggplot2::geom_point(ggplot2::aes(color=ifelse(C == "yes" & -log10(P)<=thr, 'black', 'darkgrey')), alpha=0.8, size=1.3) +
ggplot2::scale_color_manual(values = c("black" = "black", "darkgrey" = "darkgrey")) +
# Add causal points that are also significant
ggplot2::geom_point(data=subset(don, C != 'no' & -log10(P)>thr), color="blue", size=1.6) +
# Add evt. points that are found significant but not causal (false-positive)
ggplot2::geom_point(data=subset(don, C == 'no' & -log10(P)>thr), color="red", size=1.6)+
# Custom the theme:
ggplot2::theme_light() +
ggplot2::theme(
legend.position="none",
panel.border = ggplot2::element_blank(),
panel.grid.major.x = ggplot2::element_blank(),
panel.grid.minor.x = ggplot2::element_blank()
)
plotly::ggplotly(p, tooltip="text")
total_indiv <- 100000
SNP <- 100000
h <- 0.5
sib <- 0
# Read files
assoc_string <- paste("./data/case_ctrl","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.ASSOC", sep="")
assoc_file <- data.table::fread(assoc_string)
causal_string <- paste("./data/BETA","_",format(total_indiv,scientific = F),"_",format(SNP,scientific = F),"_",h*100,"_5.txt", sep="")
causal1 <- data.table::fread(causal_string)
causal1$C <- ifelse(causal1$V2 != 0, "yes", "no")
assoc_file <- dplyr::left_join(assoc_file,dplyr::select(causal1,V1,C), by = c("SNP" = "V1"))
# Threshold
thr = -log10(.05/1000000)
don <- assoc_file %>%
# Filter SNP to make the plot lighter
dplyr::filter(-log10(P)>1)
# Prepare text description for each SNP:
don$text <- paste("SNP: ", don$SNP, "\nLOD score:", -log10(don$P) %>% round(2), "\nCausal SNP:", don$C ,sep="")
# Make the plot
p <- ggplot2::ggplot(don, ggplot2::aes(x=SNP, y=-log10(P), text=text)) +
# Show all points
ggplot2::geom_point(ggplot2::aes(color=ifelse(C == "yes" & -log10(P)<=thr, 'black', 'darkgrey')), alpha=0.8, size=1.3) +
ggplot2::scale_color_manual(values = c("black" = "black", "darkgrey" = "darkgrey")) +
# Add causal points that are also significant
ggplot2::geom_point(data=subset(don, C != 'no' & -log10(P)>thr), color="blue", size=1.6) +
# Add evt. points that are found significant but not causal (false-positive)
ggplot2::geom_point(data=subset(don, C == 'no' & -log10(P)>thr), color="red", size=1.6)+
# Custom the theme:
ggplot2::theme_light() +
ggplot2::theme(
legend.position="none",
panel.border = ggplot2::element_blank(),
panel.grid.major.x = ggplot2::element_blank(),
panel.grid.minor.x = ggplot2::element_blank()
)
plotly::ggplotly(p, tooltip="text")
setwd("C:\\Users\\Bruger\\Desktop\\DataProjectGWAS")
library("devtools")
setwd("./GWAS")
document()
